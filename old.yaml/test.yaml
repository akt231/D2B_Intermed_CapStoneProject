version: "2"
services:
  kafka:
  #Kafka without Zookeeper
    container_name: kafka
    #image: quay.io/strimzi/kafka:latest-kafka-2.8.1-amd64
    image: ubuntu/kafka
    command:
      [
        "sh",
        "-c",
        "export CLUSTER_ID=$$(bin/kafka-storage.sh random-uuid) && bin/kafka-storage.sh format -t $$CLUSTER_ID -c config/kraft/server.properties && bin/kafka-server-start.sh config/kraft/server.properties --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} --override listeners=$${KAFKA_LISTENERS}",
      ]
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
    networks:
      - appnet

  prod:
    build:
      context: ./finnhub_producer
      dockerfile: Dockerfile
    container_name: prod
    ports:
      - '1488:88'
    volumes:
      - app_producer:/usr/src/app
    working_dir: /usr/src/app
    restart: always
    networks:
          - appnet

networks:
  appnet:
    driver: bridge

volumes:
  app_producer:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./finnhub_producer