version: '2'

networks: 
  appnet:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
<<<<<<< HEAD
      - "2181:2181"
=======
      - '2181:2181'
>>>>>>> f5dbea11beb89042d70da76563c5fe882042e634
      - '8078:8080'
      - '3181:3181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
<<<<<<< HEAD
      #KAFKA_OPTS: "-Dzookeeper.admin.enableServer=false -Dzookeeper.4lw.commands.whitelist=ruok"
    restart: always
=======
      KAFKA_OPTS: "-Dzookeeper.admin.enableServer=false -Dzookeeper.4lw.commands.whitelist=ruok"
      #KAFKA_OPTS: '-Dzookeeper.admin.serverPort=3181'

  broker:
    image: confluentinc/cp-server:7.3.0
    container_name: broker
    working_dir: /apps/d2b_cap/kafka
    volumes:
      - ./kafka:/apps/d2b_cap/kafka
      - "kafka_logs:/kafka_log"
>>>>>>> f5dbea11beb89042d70da76563c5fe882042e634
    networks: 
      - appnet
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-txn-logs:/var/lib/zookeeper/log

  broker:
    image: confluentinc/cp-kafka:7.3.0
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "9101:9101"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092, PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
<<<<<<< HEAD
    restart: always
    networks: 
      - appnet
    volumes:
      - kafka-data:/var/lib/kafka/data
=======
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      #KAFKA_CREATE_TOPICS: '${d2b_kafka_producer_topic}:1:1'
      KAFKA_ADVERTISED_HOST_NAME: host.docker.internal # change to 172.17.0.1 if running on Ubuntu
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      
    #volumes:
    #  - /var/run/docker.sock:/var/run/docker.sock
>>>>>>> f5dbea11beb89042d70da76563c5fe882042e634

  producer:
    build:
      context: ./
      dockerfile: ./finnhub_producer/Dockerfile
    container_name: producer
    ports:
      - '1488:88'
    #volumes:
    #  - app_producer:/usr/src/app/producer
    working_dir: /usr/src/app/producer
    restart: always
    networks: 
      - appnet



volumes:
  #app_producer:
  #  driver: local
  #  driver_opts:
  #    type: none
  #    o: bind
  #    device: ./finnhub_producer
  zk-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./kafka/logs/zk-data
  zk-txn-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./kafka/logs/zk-txn-logs
  kafka-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./kafka/logs/kafka-data